set vicmd=nvim

set syscalls
" Trash Directory
" The default is to move files that are deleted with dd or :d to
" the trash directory.  If you change this you will not be able to move
" files by deleting them and then using p to put the file in the new location.
" I recommend not changing this until you are familiar with vifm.
" This probably shouldn't be an option.
set trash

" This is how many directories to store in the directory history.
set history=100

" With this option turned on you can run partially entered commands with
" unambiguous beginning using :! (e.g. :!Te instead of :!Terminal or :!Te<tab>).
set fastrun

" Natural sort of (version) numbers within text.
set sortnumbers


" Maximum number of changes that can be undone.
set undolevels=200

" Use Vim's format of help file (has highlighting and "hyperlinks").
" If you would rather use a plain text help file set novimhelp.
set vimhelp

" If you would like to run an executable file when you
" press return on the file name set this.
set norunexec

" Selected color scheme
"colorscheme Default
"colorscheme zenburn_1
colorscheme onedark

set number relativenumber

" Format for displaying time in file list. For example:
" TIME_STAMP_FORMAT=%m/%d-%H:%M
" See man date or man strftime for details.
set timefmt=%H:%M-%d/%m/%y

" Show list of matches on tab completion in command-line mode
set wildmenu

" Display completions in a form of popup with descriptions of the matches
set wildstyle=popup

" Display suggestions in normal, visual and view modes for keys, marks and
" registers (at most 5 files).  In other view, when available.
set suggestoptions=normal,visual,view,otherpane,keys,marks,registers

" Ignore case in search patterns unless it contains at least one uppercase
" letter

set ignorecase
set smartcase

" Don't highlight search results automatically
set nohlsearch

" Use increment searching (search while typing)
set incsearch

" Try to leave some space from cursor to upper/lower border in lists
set scrolloff=0

" Don't do too many requests to slow file systems
if !has('win')
    set slowfs=curlftpfs
endif

" Set custom status line look
"%15s significa darle 15% del espacio en status bar al size, %10 es darle eso a date, u:g es ttdduu:ttdduu.
"set statusline="  Hint: %z%= %A %1u:%-1g %8s %10d  "
"set statusline="   filesize %1s"
"set statusline="   filesize %1s   %{system('/home/ttdduu/code/misc/git_status.sh')}    env %{system('echo ${CONDA_PREFIX##*/}')}"
set statusline="   filesize %1s   %{system('/home/ttdduu/code/misc/git_status.sh')}    env %{system('/home/ttdduu/code/misc/env')}"

" :com[mand][!] command_name action
" The following macros can be used in a command
" %a is replaced with the user arguments.
" %c the current file under the cursor.
" %C the current file under the cursor in the other directory.
" %f the current selected file, or files.
" %F the current selected file, or files in the other directory.
" %b same as %f %F.
" %d the current directory name.
" %D the other window directory name.
" %m run the command in a menu window

command! df df -h %m 2> /dev/null
command! diff nvim -d %f %F
command! zip zip -r %f.zip %f
command! run !! ./%f
command! make !!make %a
command! mkcd :mkdir %a | cd %a
command! vgrep nvim "+grep %a"
command! reload :write | restart


" bla {{{
" The file type is for the default programs to be used with
" a file extension.
" :filetype pattern1,pattern2 defaultprogram,program2
" :fileviewer pattern1,pattern2 consoleviewer
" The other programs for the file type can be accessed with the :file command
" The command macros %f, %F, %d, %F may be used in the commands.
" The %a macro is ignored.  To use a % you must put %%.

" For automated FUSE mounts, you must register an extension with :file[x]type
" in one of following formats:
"
" :filetype extensions FUSE_MOUNT|some_mount_command using %SOURCE_FILE and %DESTINATION_DIR variables
" %SOURCE_FILE and %DESTINATION_DIR are filled in by vifm at runtime.
" A sample line might look like this:
" :filetype *.zip,*.jar,*.war,*.ear FUSE_MOUNT|fuse-zip %SOURCE_FILE %DESTINATION_DIR
"
" :filetype extensions FUSE_MOUNT2|some_mount_command using %PARAM and %DESTINATION_DIR variables
" %PARAM and %DESTINATION_DIR are filled in by vifm at runtime.
" A sample line might look like this:
" :filetype *.ssh FUSE_MOUNT2|sshfs %PARAM %DESTINATION_DIR
" %PARAM value is filled from the first line of file (whole line).
" Example first line for SshMount filetype: root@127.0.0.1:/
"
" You can also add %CLEAR if you want to clear screen before running FUSE
" program.
" }}}

" xournalpp
filextype *.xopp sw xournalpipi %c

" Pdf

 filextype *.pdf sw okular %c

 filextype *.djvu sw okular %c
nnoremap e :!sw okular %c<cr>
fileviewer *.pdf
        \ vifmimg pdfpreview %px %py %pw %ph %c
        \ %pc
        \ vifmimg clear
"		\ pdftotext -nopgbrk %c -

"txt y cualquier cosa con nvim
filextype *.txt nvim %c
filextype *.md nvim %c
filextype *.py nvim %c
filextype *.json nvim %c
filextype *.vim nvim %c
filextype *.lua nvim %c
filextype *.wiki nvim %c
" para abrir con nvim, sudo nvim, y sudo whatever
nnoremap <CR> :!nvim %f<cr>
nnoremap s<CR> :!sudoedit %f<cr>
nnoremap sl :!sudo %f<cr>

" Audio
filetype *.flac,*.wma,*.ape,*.ac3,*.og[agx],*.spx,*.opus,*.mp4
"      \ {Play using ffplay}
"      \ ffplay -nodisp -autoexit %c,
       \ {Play using MPlayer}
	   \ {Play using vlc}
	   \ sw vlc %c
filetype *.wav
		\ sw praat-open-files %f

" Video
filextype *.avi,*.wmv,*.dat,*.3gp,*.ogv,*.mkv,*.mpg,*.mpeg,*.vob,*.mp3,*.m4a,*.mp4
         \*.fl[icv],*.m2v,*.mov,*.webm,*.ts,*.mts,*.m4v,*.r[am],*.qt,*.divx,
         \*.as[fx]
"       \ {View using ffplay}
"       \ ffplay -fs -autoexit %f,
"       \ {View using Dragon}
"       \ dragon %f:p,
"       \ {View using mplayer}
"       \ mplayer %f,
		\ {view using vlc}
		\ sw vlc %c

filextype *.session
		\ nvim -S %c

fileviewer *.avi,*.wmv,*.dat,*.3gp,*.ogv,*.mkv,*.mpg,*.mpeg,*.vob
          \*.fl[icv],*.m2v,*.mov,*.webm,*.ts,*.mts,*.m4v,*.r[am],*.qt,*.divx,
          \*.as[fx]
        \ vifmimg videopreview %px %py %pw %ph %c
        \ %pc
        \ vifmimg clear
        " \ ffprobe -pretty %c 2>&1

" Images
filextype *.bmp,*.jpg,*.jpeg,*.png,*.gif,*.xpm
"       \ {View in sxiv}
"       \ sxiv %f,
"       \ {View in gpicview}
"       \ gpicview %c,
"        \ {View in shotwell}
"        \ shotwell %f %c,
		\ sw sxiv %f %c

fileviewer *.bmp,*.jpg,*.jpeg,*.png,*.gif,*.xpm
		\ vifmimg draw %px %py %pw %ph %c
		\ %pc
		\ vifmimg clear

" Office files
filetype *.odt,*.doc,*.docx,*.xls,*.xlsx,*.odp,*.pptx libreof %c
"fileviewer *.doc libreoffice %c

" trash {{{
" Web
filextype *.html,*.htm
"       \ {Open with dwb}
"       \ dwb %f %i &,
"       \ {Open with firefox}
"       \ firefox %f &,
"       \ {Open with uzbl}
"       \ uzbl-browser %f %i &,
		\ {Open with brave}
		\brave-browser %f &,
filetype *.html,*.htm links, lynx


" PostScript
filextype *.ps,*.eps,*.ps.gz
        \ {View in zathura}
        \ zathura %f,
        \ {View in gv}
        \ gv %c %i &,

" jupyter notebook
filextype *.ipynb
filetype *.ipynb
"		\{view in brave-browser}
"		\NotebookApp %f %c,
		\ jupyter-notebook %c

" Djvu
filextype *.djvu
        \ {View in zathura}
        \ zathura %f,
        \ {View in apvlv}
        \ apvlv %f,

" Object
filetype *.o nm %f | less

" Man page
filetype *.[1-8] man ./%c
fileviewer *.[1-8] man ./%c | col -b


" OpenRaster/
filextype *.ora
        \ {Edit in MyPaint}
        \ mypaint %f,

" Mindmap
filextype *.vym
        \ {Open with VYM}
        \ vym %f &,

" MD5
filetype *.md5
       \ {Check MD5 hash sum}
       \ md5sum -c %f %S,

" SHA
" SHA1
filetype *.sha1
       \ {Check SHA1 hash sum}
       \ sha1sum -c %f %S,

" SHA256
filetype *.sha256
       \ {Check SHA256 hash sum}
       \ sha256sum -c %f %S,

" SHA512
filetype *.sha512
       \ {Check SHA512 hash sum}
       \ sha512sum -c %f %S,

" GPG signature
filetype *.asc
       \ {Check signature}
       \ !!gpg --verify %c,


" FuseZipMount
filetype *.zip,*.jar,*.war,*.ear,*.oxt,*.apkg
       \ {Mount with fuse-zip}
       \ FUSE_MOUNT|fuse-zip %SOURCE_FILE %DESTINATION_DIR,
       \ {View contents}
       \ zip -sf %c | less,
       \ {Extract here}
       \ tar -xf %c,
fileviewer *.zip,*.jar,*.war,*.ear,*.oxt zip -sf %c

" ArchiveMount
filetype *.tar,*.tar.bz2,*.tbz2,*.tgz,*.tar.gz,*.tar.xz,*.txz
       \ {Mount with archivemount}
       \ FUSE_MOUNT|archivemount %SOURCE_FILE %DESTINATION_DIR,
fileviewer *.tgz,*.tar.gz tar -tzf %c
fileviewer *.tar.bz2,*.tbz2 tar -tjf %c
fileviewer *.tar.txz,*.txz xz --list %c
fileviewer *.tar tar -tf %c

" Rar2FsMount and rar archives
filetype *.rar
       \ {Mount with rar2fs}
       \ FUSE_MOUNT|rar2fs %SOURCE_FILE %DESTINATION_DIR,
fileviewer *.rar unrar v %c

" IsoMount
filetype *.iso
       \ {Mount with fuseiso}
       \ FUSE_MOUNT|fuseiso %SOURCE_FILE %DESTINATION_DIR,

" SshMount
filetype *.ssh
       \ {Mount with sshfs}
       \ FUSE_MOUNT2|sshfs %PARAM %DESTINATION_DIR %FOREGROUND,

" FtpMount
filetype *.ftp
       \ {Mount with curlftpfs}
       \ FUSE_MOUNT2|curlftpfs -o ftp_port=-,,disable_eprt %PARAM %DESTINATION_DIR %FOREGROUND,

" Fuse7z and 7z archives
filetype *.7z
       \ {Mount with fuse-7z}
       \ FUSE_MOUNT|fuse-7z %SOURCE_FILE %DESTINATION_DIR,
fileviewer *.7z 7z l %c}}}

" Torrent
filetype *.torrent ktorrent %f &
fileviewer *.torrent dumptorrent -v %c


" Directories
filextype */
        \ {View in thunar}
        \ Thunar %f &,

" {{{Syntax highlighting in preview
"
" Explicitly set highlight type for some extensions
"
" 256-color terminal
" fileviewer *.[ch],*.[ch]pp highlight -O xterm256 -s dante --syntax c %c
" fileviewer Makefile,Makefile.* highlight -O xterm256 -s dante --syntax make %c
"
" 16-color terminal
" fileviewer *.c,*.h highlight -O ansi -s dante %c
"
" Or leave it for automatic detection
"
" fileviewer *[^/] pygmentize -O style=monokai -f console256 -g

" Displaying pictures in terminal
"
 "fileviewer *.jpg,*.png feh %c

" fileviewer *.jpg,*.png shotwell %c cuando pongo este me lo muestra pero se queda trabado ahi}}}

" Open all other files with default system programs (you can also remove all
" :file[x]type commands above to ensure they don't interfere with system-wide
" settings).  By default all unknown files are opened with 'vi[x]cmd'
" uncommenting one of lines below will result in ignoring 'vi[x]cmd' option
" for unknown file types.
" For *nix:
"filetype * vim

" ------------------------------------------------------------------------------

" What should be saved automatically between vifm sessions.  Drop "savedirs"
" value if you don't want vifm to remember last visited directories for you.


" ------------------------------------------------------------------------------

" Examples of configuring both panels

" Customize view columns a bit (enable ellipsis for truncated file names)
"
set viewcolumns=-{name},36{mtime},17{ctime}
"set viewcolumns=-{name},8{mtime},12{ctime}

" Filter-out build and temporary files
"
" filter! /^.*\.(lo|o|d|class|py[co])$|.*~$/

" ------------------------------------------------------------------------------
"{{{ Sample mappings

" Start shell in current directory
 nnoremap sh :shell<cr>
"nnoremap sh :q<cr>

" Display sorting dialog
nnoremap S :sort<cr>

" Toggle visibility of preview window
nnoremap w :view<cr>
vnoremap w :view<cr>gv

"nnoremap cw cw<c-a>

" Open file in the background using its default program
"nnoremap gb :file &<cr>l

" Interaction with system clipboard
if has('win')
    " Yank current directory path to Windows clipboard with forward slashes
    nnoremap yp :!echo %"d:gs!\!/! %i | clip<cr>
    " Yank path to current file to Windows clipboard with forward slashes
    nnoremap yf :!echo %"c:gs!\!/! %i | clip<cr>
elseif executable('xclip')
    " Yank current directory path into the clipboard
    nnoremap yd :!echo %d | xclip %i<cr>
    " Yank current file path into the clipboard
nnoremap yf :!echo %c:p | xclip %i<cr>
elseif executable('xsel')
    " Yank current directory path into primary and selection clipboards
    nnoremap yd :!echo -n %d | xsel --input --primary %i &&
                \ echo -n %d | xsel --clipboard --input %i<cr>
    " Yank current file path into into primary and selection clipboards
    nnoremap yf :!echo -n %c:p | xsel --input --primary %i &&
                \ echo -n %c:p | xsel --clipboard --input %i<cr>
endif

" ahora para mi, que no tengo windows:
" yank current directory path into the clipboard
nnoremap yd :!echo -n %d | xclip -selection clipboard %i<cr>:echo expand('%"d') "is yanked to clipboard"<cr>

" yank current file path into the clipboard
nnoremap yf :!echo -n %c:p | xclip -selection clipboard %i<cr>:echo expand('%"c:p') "is yanked to clipboard"<cr>


" yank current filename without path into the clipboard
nnoremap yn :!echo -n %c | xclip -selection clipboard %i<cr>:echo expand('%"c') "is yanked to clipboard"<cr>

" yank root of current file's name into the clipboard
nnoremap yr :!echo -n %c:r | xclip -selection clipboard %i<cr>:echo expand('%"c:r') "is yanked to clipboard"<cr>


" Open editor to edit vifmrc and apply settings after returning to vifm
command fmrc :write | edit $MYVIFMRC | restart<cr>

" esto no lo estoy logrando togglear.
" Toggle wrap setting on ,w key
nnoremap ,w :set wrap!<cr>




"copiar foto estilo yy pero al clipobard de screenshots
"nnoremap <yi> :!echo -n | maim -s | xclip -selection clipboard -t image/png %c
"}}}

" ------------------------------------------------------------------------------

" {{{ Various customization examples

" Use ag (the silver searcher) instead of grep
"
" set grepprg='ag --line-numbers %i %a %s'

" Add additional place to look for executables
"
" let $PATH = $HOME.'/bin/fuse:'.$PATH

" Block particular shortcut
"
" nnoremap <left> <nop>

" Export IPC name of current instance as environment variable and use it to
" communicate with the instance later.
"
" It can be used in some shell script that gets run from inside vifm, for
" example, like this:
"     vifm --server-name "$VIFM_SERVER_NAME" --remote +"cd '$PWD'"
"
" let $VIFM_SERVER_NAME = v:servername
" }}}

" {{{ startup
"single pane en vez de doble
only

"recordar ultimo dir abierto en vifm
set vifminfo=dhistory,savedirs,state,registers,bookmarks,bmarks,marks


" carpetas a ignorar
"windo filter /snap\/|Downloads\/|seaborn-data\/|media\/|wiki\/|wiki_test
nnoremap f :filter !<cr>
nnoremap F :windo filter /snap\/|Downloads\/|Templates\/|Music\/|Public\/|Desktop\/|Videos\/|/home/ttdduu/Pictures\/|Documents/<cr>

" para esconder el .synctex.gz generado al compilar un .tex
"filter {*.synctex.gz}

" }}}

nmap <space>td :!nvim todo.wiki<cr>
nmap <space>ww :!nvim index.wiki<cr>
nmap <space>a :sp <cr>

" crear hardlink: me paro en el archivo en una split, hago :ln<cr> y se crea un hardlink en el directory de la otra pane que tengo que tener abierta.
command ln ln %f:p %D


" que los archivos de la carpeta dejen de ser ejecutables (culpa de mi disco externo ntfs)


" abrir archivos seleccionados en vim en horizontal split (porque o en normal mode de vifm es algo de gvim que no uso). ademas, notar que si abro archivos seleccionados con <cr> (normalmente) se abre una sola window; los demas buffers los puedo acceder con mi mapeo de vimrc de B.

" grepear archivos que tengan cierta cosa adentro (me sirve para tags en wiki (st=search tag)):
nmap st :grep -l --exclude-dir=.git
" }}}

command bb :cd $biblio
command pp :cd $papers
command lsd :cd /home/ttdduu/lsd
command fsn :cd /home/ttdduu/fsn
command evo :cd /home/ttdduu/evo
command biome :cd /home/ttdduu/biome
command D :cd /home/ttdduu/Dropbox

"set sort=-mtime
autocmd DirEnter ~/Downloads,$wiki_lsd,$papers,$biblio setlocal sort=-mtime

vmap _ :s/\ /_/g<cr>
nmap _ v_

hi /^.*\.py$/ ctermfg=002
hi /^.*\.praat$/ ctermfg=002

nmap W :vsp<cr>

nmap <space>vv :!sw vlc %c<cr>

nmap <space>vc :!cvlc %c<cr>

nmap <space>gl :!nvim +":term git log --name-status"<cr>
"nmap <space>gA :!nvim -c "term git add ."
nmap <space>gA :!git add -A<cr>
nmap <space>gcm :!nvim -c "G commit" -c "wincmd k" -c "q"<cr>
"nmap <space>gp :!nvim -c "G push origin HEAD" -c "q"<cr>
nmap <space>gp :!nvim -c "GitPushFirstRemote" -c "q"<cr>
nmap <space>gg :!nvim +":term git status"<cr>
nmap <space>gch :!git checkout
nmap <space>gm :!git merge
"nmap <space>gs :!nvim -c "G" -c "wincmd k" -c "q"
"
"nmap A :!
nmap N Sn
nmap M Sm
nmap D {}k
autocmd DirEnter $HOME setlocal sort=mtime
windo filter /snap\/|Downloads\/|Templates\/|Music\/|Public\/|Desktop\/|Videos\/|Pictures\/|Documents\//

command cal :!nvim /home/ttdduu/calendario/calendario.wiki
nmap sr :!sudo rm -rf %f<cr>
vmap sr :!sudo rm %f<cr>
nmap T :!nvim -S %c<cr>

nmap A :!nvim %c:r.wiki<cr>

nmap tn :tabnew<cr>,dtr
nmap | :tabnext<cr>
nmap 1| :tabprev<cr>
nmap tc :tabclose<cr>
nmap yp yf
